{
  "address": "0x1DdD92fbaB65a8D98C3772e215888f684D084339",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "func",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "gas",
          "type": "uint256"
        }
      ],
      "name": "Log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "adr",
          "type": "address"
        }
      ],
      "name": "beanRewards",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "buyBones",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "eth",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "contractBalance",
          "type": "uint256"
        }
      ],
      "name": "calculateBoneBuy",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "eth",
          "type": "uint256"
        }
      ],
      "name": "calculateBoneBuySimple",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "bones",
          "type": "uint256"
        }
      ],
      "name": "calculateBoneSell",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "adr",
          "type": "address"
        }
      ],
      "name": "getBonesSinceLastHatch",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "adr",
          "type": "address"
        }
      ],
      "name": "getMyBones",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "adr",
          "type": "address"
        }
      ],
      "name": "getMyMiners",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "hatchBones",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "seedMarket",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "sellBones",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "setToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "_tradingState",
          "type": "uint8"
        }
      ],
      "name": "setTradingState",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tradingState",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x1a3a3b62de4a017bae3498b9fa26fff918dffc694f1b1bdea5cc48e287323126",
  "receipt": {
    "to": null,
    "from": "0x66ab0d9605fb5D5c9f802deA199C38d93B1Ea8ab",
    "contractAddress": "0x1DdD92fbaB65a8D98C3772e215888f684D084339",
    "transactionIndex": 0,
    "gasUsed": "1086885",
    "logsBloom": "0x
    "blockHash": "0xa73e3f9f51a116a5166b1656f4d8032bbc7f7cf2edfd961680f35bab586423ae",
    "transactionHash": "0x1a3a3b62de4a017bae3498b9fa26fff918dffc694f1b1bdea5cc48e287323126",
    "logs": [
      {
        "transactionIndex": 0,
        "blockNumber": 46954450,
        "transactionHash": "0x1a3a3b62de4a017bae3498b9fa26fff918dffc694f1b1bdea5cc48e287323126",
        "address": "0x1DdD92fbaB65a8D98C3772e215888f684D084339",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x00000000000000000000000066ab0d9605fb5d5c9f802dea199c38d93b1ea8ab"
        ],
        "data": "0x",
        "logIndex": 0,
        "blockHash": "0xa73e3f9f51a116a5166b1656f4d8032bbc7f7cf2edfd961680f35bab586423ae"
      },
      {
        "transactionIndex": 0,
        "blockNumber": 46954450,
        "transactionHash": "0x1a3a3b62de4a017bae3498b9fa26fff918dffc694f1b1bdea5cc48e287323126",
        "address": "0x1DdD92fbaB65a8D98C3772e215888f684D084339",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x00000000000000000000000066ab0d9605fb5d5c9f802dea199c38d93b1ea8ab",
          "0x00000000000000000000000066ab0d9605fb5d5c9f802dea199c38d93b1ea8ab"
        ],
        "data": "0x",
        "logIndex": 1,
        "blockHash": "0xa73e3f9f51a116a5166b1656f4d8032bbc7f7cf2edfd961680f35bab586423ae"
      },
      {
        "transactionIndex": 0,
        "blockNumber": 46954450,
        "transactionHash": "0x1a3a3b62de4a017bae3498b9fa26fff918dffc694f1b1bdea5cc48e287323126",
        "address": "0x0000000000000000000000000000000000001010",
        "topics": [
          "0x4dfe1bbbcf077ddc3e01291eea2d5c70c2b422b415d95645b9adcfd678cb1d63",
          "0x0000000000000000000000000000000000000000000000000000000000001010",
          "0x00000000000000000000000066ab0d9605fb5d5c9f802dea199c38d93b1ea8ab",
          "0x0000000000000000000000005082f249cdb2f2c1ee035e4f423c46ea2dab3ab1"
        ],
        "data": "0x00000000000000000000000000000000000000000000000000134e94aab6355500000000000000000000000000000000000000000000000003d1bf94c5d92959000000000000000000000000000000000000000000000768d85dc4e97293edf200000000000000000000000000000000000000000000000003be71001b22f404000000000000000000000000000000000000000000000768d871137e1d4a2347",
        "logIndex": 2,
        "blockHash": "0xa73e3f9f51a116a5166b1656f4d8032bbc7f7cf2edfd961680f35bab586423ae"
      }
    ],
    "blockNumber": 46954450,
    "cumulativeGasUsed": "1086885",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x66ab0d9605fb5D5c9f802deA199C38d93B1Ea8ab",
    "0x0406dbBF7B62f79F8d889F30cC1F0E9191c404D4"
  ],
  "numDeployments": 9,
  "solcInputHash": "eea8480ea0856f49c62e8fa614e65051",
  "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"func\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"gas\",\"type\":\"uint256\"}],\"name\":\"Log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"adr\",\"type\":\"address\"}],\"name\":\"beanRewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"buyBones\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"eth\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"contractBalance\",\"type\":\"uint256\"}],\"name\":\"calculateBoneBuy\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"eth\",\"type\":\"uint256\"}],\"name\":\"calculateBoneBuySimple\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bones\",\"type\":\"uint256\"}],\"name\":\"calculateBoneSell\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"adr\",\"type\":\"address\"}],\"name\":\"getBonesSinceLastHatch\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"adr\",\"type\":\"address\"}],\"name\":\"getMyBones\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"adr\",\"type\":\"address\"}],\"name\":\"getMyMiners\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"hatchBones\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"seedMarket\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sellBones\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"setToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"_tradingState\",\"type\":\"uint8\"}],\"name\":\"setTradingState\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tradingState\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Mining.sol\":\"Mining\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"},\"contracts/Mining.sol\":{\"content\":\"/**\\r\\n *Submitted for verification at BscScan.com on 2022-12-12\\r\\n */\\r\\n\\r\\n// SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity ^0.8.20;\\r\\n\\r\\nimport '@openzeppelin/contracts/utils/Context.sol';\\r\\n\\r\\n\\r\\ncontract Ownable is Context {\\r\\n  address private _owner;\\r\\n\\r\\n  event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\r\\n\\r\\n  constructor() {\\r\\n    address msgSender = _msgSender();\\r\\n    _owner = msgSender;\\r\\n    emit OwnershipTransferred(address(0), msgSender);\\r\\n  }\\r\\n\\r\\n  function owner() public view returns (address) {\\r\\n    return _owner;\\r\\n  }\\r\\n\\r\\n  modifier onlyOwner() {\\r\\n    require(_owner == _msgSender(), 'Ownable: caller is not the owner');\\r\\n    _;\\r\\n  }\\r\\n\\r\\n  function renounceOwnership() public onlyOwner {\\r\\n    emit OwnershipTransferred(_owner, address(0));\\r\\n    _owner = address(0);\\r\\n  }\\r\\n\\r\\n  function transferOwnership(address newOwner) public onlyOwner {\\r\\n    _transferOwnership(newOwner);\\r\\n  }\\r\\n\\r\\n  function _transferOwnership(address newOwner) internal {\\r\\n    require(newOwner != address(0), 'Ownable: new owner is the zero address');\\r\\n    emit OwnershipTransferred(_owner, newOwner);\\r\\n    _owner = newOwner;\\r\\n  }\\r\\n}\\r\\n\\r\\ninterface IERC20 {\\r\\n  function balanceOf(address account) external view returns (uint256);\\r\\n\\r\\n  // function isPresaleClaimed(address account) external view returns (bool);\\r\\n}\\r\\n\\r\\ncontract Mining is Context, Ownable {\\r\\n\\r\\n  uint256 private BONES_TO_HATCH_1MINERS = 1080000; //for final version should be seconds in a day\\r\\n  uint256 private PSN = 10000;\\r\\n  uint256 private PSNH = 5000;\\r\\n  uint256 private devFeeVal = 2;\\r\\n  bool private initialized = false;\\r\\n  address payable private recAdd = payable(0xAEba95a79411d88C7c108BEbCC2A8eaa5143A7f9);\\r\\n  event Log(string func, uint gas);\\r\\n  mapping(address => uint256) private hatcheryMiners;\\r\\n  mapping(address => uint256) private claimedBones;\\r\\n  mapping(address => uint256) private lastHatch;\\r\\n  mapping(address => address) private referrals;\\r\\n  uint256 private marketBones;\\r\\n  uint8 public tradingState = 0;\\r\\n  IERC20 token;\\r\\n\\r\\n  constructor(address _owner, address _token) {\\r\\n    setToken(_token);\\r\\n    transferOwnership(_owner);\\r\\n  }\\r\\n\\r\\n  modifier canTrade() {\\r\\n    // if (tradingState == 1)\\r\\n    //   require(token.isPresaleClaimed(_msgSender()) || owner() == _msgSender(), 'only presale users');\\r\\n\\r\\n    if (tradingState == 0) require(owner() == _msgSender(), 'trades are not enabled');\\r\\n\\r\\n    require(owner() == _msgSender() || token.balanceOf(_msgSender()) != 0, 'should be a MINE holder');\\r\\n\\r\\n    _;\\r\\n  }\\r\\n\\r\\n  function setTradingState(uint8 _tradingState) public onlyOwner {\\r\\n    require(_tradingState < 3, 'trading state should be 0:only owner, 1:whitelisted, 2:public');\\r\\n    tradingState = _tradingState;\\r\\n  }\\r\\n\\r\\n  function setToken(address _token) public onlyOwner {\\r\\n    require(_token != address(0), 'invalid token address');\\r\\n    token = IERC20(_token);\\r\\n  }\\r\\n\\r\\n  function hatchBones() public canTrade {\\r\\n    require(initialized, 'not initilized');\\r\\n\\r\\n    uint256 bonesUsed = getMyBones(msg.sender);\\r\\n    uint256 newMiners = bonesUsed / BONES_TO_HATCH_1MINERS;\\r\\n    hatcheryMiners[msg.sender] = hatcheryMiners[msg.sender] + newMiners;\\r\\n    claimedBones[msg.sender] = 0;\\r\\n    lastHatch[msg.sender] = block.timestamp;\\r\\n\\r\\n    //boost market to nerf miners hoarding\\r\\n    marketBones = marketBones + (bonesUsed/5);\\r\\n  }\\r\\n\\r\\n  function sellBones() public canTrade {\\r\\n    require(initialized, 'not initilized');\\r\\n    uint256 hasBones = getMyBones(msg.sender);\\r\\n    uint256 boneValue = calculateBoneSell(hasBones);\\r\\n    uint256 fee = devFee(boneValue);\\r\\n    claimedBones[msg.sender] = 0;\\r\\n    lastHatch[msg.sender] = block.timestamp;\\r\\n    marketBones = marketBones + hasBones;\\r\\n    recAdd.transfer(fee);\\r\\n    payable(msg.sender).transfer(boneValue - fee);\\r\\n  }\\r\\n\\r\\n  function beanRewards(address adr) public view returns (uint256) {\\r\\n    uint256 hasBones = getMyBones(adr);\\r\\n    uint256 boneValue = calculateBoneSell(hasBones);\\r\\n    return boneValue;\\r\\n  }\\r\\n\\r\\n  function buyBones() public payable canTrade {\\r\\n    require(initialized, 'not initilized');\\r\\n    uint256 bonesBought = calculateBoneBuy(msg.value, (address(this).balance - msg.value));\\r\\n    bonesBought = bonesBought - devFee(bonesBought);\\r\\n    uint256 fee = devFee(msg.value);\\r\\n    recAdd.transfer(fee);\\r\\n    claimedBones[msg.sender] = claimedBones[msg.sender] + bonesBought;\\r\\n    hatchBones();\\r\\n  }\\r\\n\\r\\n  function calculateTrade(\\r\\n    uint256 rt,\\r\\n    uint256 rs,\\r\\n    uint256 bs\\r\\n  ) private view returns (uint256) {\\r\\n    return\\r\\n        PSN * bs/(PSNH + (PSN * rs + PSNH * rt)/rt);\\r\\n  }\\r\\n\\r\\n  function calculateBoneSell(uint256 bones) public view returns (uint256) {\\r\\n    return calculateTrade(bones, marketBones, address(this).balance);\\r\\n  }\\r\\n\\r\\n  function calculateBoneBuy(uint256 eth, uint256 contractBalance) public view returns (uint256) {\\r\\n    return calculateTrade(eth, contractBalance, marketBones);\\r\\n  }\\r\\n\\r\\n  function calculateBoneBuySimple(uint256 eth) public view returns (uint256) {\\r\\n    return calculateBoneBuy(eth, address(this).balance);\\r\\n  }\\r\\n\\r\\n  function devFee(uint256 amount) private view returns (uint256) {\\r\\n    return amount * devFeeVal/100;\\r\\n  }\\r\\n\\r\\n  function seedMarket() public payable onlyOwner {\\r\\n    require(marketBones == 0);\\r\\n    initialized = true;\\r\\n    marketBones = 108000000000;\\r\\n  }\\r\\n\\r\\n  function getBalance() public view returns (uint256) {\\r\\n    return address(this).balance;\\r\\n  }\\r\\n\\r\\n  function getMyMiners(address adr) public view returns (uint256) {\\r\\n    return hatcheryMiners[adr];\\r\\n  }\\r\\n\\r\\n  function getMyBones(address adr) public view returns (uint256) {\\r\\n    return claimedBones[adr] + getBonesSinceLastHatch(adr);\\r\\n  }\\r\\n\\r\\n  function getBonesSinceLastHatch(address adr) public view returns (uint256) {\\r\\n    uint256 secondsPassed = min(BONES_TO_HATCH_1MINERS, (block.timestamp - lastHatch[adr]));\\r\\n    return secondsPassed * hatcheryMiners[adr];\\r\\n  }\\r\\n  function min(uint256 a, uint256 b) private pure returns (uint256) {\\r\\n    return a < b ? a : b;\\r\\n  }\\r\\n\\r\\n  receive() external payable{\\r\\n    emit Log(\\\"receive\\\", gasleft());\\r\\n  }\\r\\n\\r\\n  fallback() external payable {\\r\\n    // send / transfer (forwards 2300 gas to this fallback function)\\r\\n    // call (forwards all of the gas)\\r\\n    emit Log(\\\"fallback\\\", gasleft());\\r\\n  }\\r\\n}\",\"keccak256\":\"0x8e3605ee103d8ad5c62351c41e65c2657e9f9daf86b1973af18f81f78ce62edd\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x60806040526004361061010d5760003560e01c8063715018a611610095578063927fbd7211610064578063927fbd7214610334578063a507abee14610354578063c373336e14610374578063f2fde38b146103a0578063fa1aa46b146103c05761016f565b8063715018a6146102b75780637954c5fd146102cc5780637a504dca146102ec5780638da5cb5b1461030c5761016f565b80632d826771116100dc5780632d826771146102245780633c5f07cb14610239578063423e8696146102415780634b634b06146102615780635694750e146102975761016f565b806312065fe0146101c3578063144fa6d7146101e557806327cf3181146102075780632c65b2921461020f5761016f565b3661016f577fdd970dd9b5bfe707922155b058a407655cb18288b807e2216442bca8ad83d6b55a60405161016591906040808252600790820152667265636569766560c81b6060820152602081019190915260800190565b60405180910390a1005b7fdd970dd9b5bfe707922155b058a407655cb18288b807e2216442bca8ad83d6b55a604051610165919060408082526008908201526766616c6c6261636b60c01b6060820152602081019190915260800190565b3480156101cf57600080fd5b50475b6040519081526020015b60405180910390f35b3480156101f157600080fd5b50610205610200366004610d85565b6103e0565b005b610205610489565b34801561021b57600080fd5b5061020561063e565b34801561023057600080fd5b5061020561081c565b6102056109a9565b34801561024d57600080fd5b5061020561025c366004610dae565b6109f8565b34801561026d57600080fd5b506101d261027c366004610d85565b6001600160a01b031660009081526006602052604090205490565b3480156102a357600080fd5b506101d26102b2366004610dd1565b610ab1565b3480156102c357600080fd5b50610205610ac3565b3480156102d857600080fd5b506101d26102e7366004610dd1565b610b37565b3480156102f857600080fd5b506101d2610307366004610d85565b610b46565b34801561031857600080fd5b506000546040516001600160a01b0390911681526020016101dc565b34801561034057600080fd5b506101d261034f366004610dea565b610b74565b34801561036057600080fd5b506101d261036f366004610d85565b610b8a565b34801561038057600080fd5b50600b5461038e9060ff1681565b60405160ff90911681526020016101dc565b3480156103ac57600080fd5b506102056103bb366004610d85565b610bab565b3480156103cc57600080fd5b506101d26103db366004610d85565b610be1565b6000546001600160a01b031633146104135760405162461bcd60e51b815260040161040a90610e0c565b60405180910390fd5b6001600160a01b0381166104615760405162461bcd60e51b8152602060048201526015602482015274696e76616c696420746f6b656e206164647265737360581b604482015260640161040a565b600b80546001600160a01b0390921661010002610100600160a81b0319909216919091179055565b600b5460ff166000036104c0576000546001600160a01b031633146104c05760405162461bcd60e51b815260040161040a90610e41565b6000546001600160a01b03163314806105565750600b5461010090046001600160a01b03166370a08231336040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa15801561052f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105539190610e71565b15155b6105725760405162461bcd60e51b815260040161040a90610e8a565b60055460ff166105945760405162461bcd60e51b815260040161040a90610ec1565b60006105a43461034f8147610eff565b90506105af81610c3b565b6105b99082610eff565b905060006105c634610c3b565b60055460405191925061010090046001600160a01b0316906108fc8315029083906000818181858888f19350505050158015610606573d6000803e3d6000fd5b5033600090815260076020526040902054610622908390610f12565b3360009081526007602052604090205561063a61081c565b5050565b600b5460ff16600003610675576000546001600160a01b031633146106755760405162461bcd60e51b815260040161040a90610e41565b6000546001600160a01b031633148061070b5750600b5461010090046001600160a01b03166370a08231336040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa1580156106e4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107089190610e71565b15155b6107275760405162461bcd60e51b815260040161040a90610e8a565b60055460ff166107495760405162461bcd60e51b815260040161040a90610ec1565b600061075433610b46565b9050600061076182610b37565b9050600061076e82610c3b565b33600090815260076020908152604080832083905560089091529020429055600a5490915061079e908490610f12565b600a556005546040516101009091046001600160a01b0316906108fc8315029083906000818181858888f193505050501580156107df573d6000803e3d6000fd5b50336108fc6107ee8385610eff565b6040518115909202916000818181858888f19350505050158015610816573d6000803e3d6000fd5b50505050565b600b5460ff16600003610853576000546001600160a01b031633146108535760405162461bcd60e51b815260040161040a90610e41565b6000546001600160a01b03163314806108e95750600b5461010090046001600160a01b03166370a08231336040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa1580156108c2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108e69190610e71565b15155b6109055760405162461bcd60e51b815260040161040a90610e8a565b60055460ff166109275760405162461bcd60e51b815260040161040a90610ec1565b600061093233610b46565b90506000600154826109449190610f25565b33600090815260066020526040902054909150610962908290610f12565b33600090815260066020908152604080832093909355600781528282208290556008905220429055610995600583610f25565b600a546109a29190610f12565b600a555050565b6000546001600160a01b031633146109d35760405162461bcd60e51b815260040161040a90610e0c565b600a54156109e057600080fd5b6005805460ff191660011790556419254d3800600a55565b6000546001600160a01b03163314610a225760405162461bcd60e51b815260040161040a90610e0c565b60038160ff1610610a9b5760405162461bcd60e51b815260206004820152603d60248201527f74726164696e672073746174652073686f756c6420626520303a6f6e6c79206f60448201527f776e65722c20313a77686974656c69737465642c20323a7075626c6963000000606482015260840161040a565b600b805460ff191660ff92909216919091179055565b6000610abd8247610b74565b92915050565b6000546001600160a01b03163314610aed5760405162461bcd60e51b815260040161040a90610e0c565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000610abd82600a5447610c57565b6000610b5182610be1565b6001600160a01b038316600090815260076020526040902054610abd9190610f12565b6000610b838383600a54610c57565b9392505050565b600080610b9683610b46565b90506000610ba382610b37565b949350505050565b6000546001600160a01b03163314610bd55760405162461bcd60e51b815260040161040a90610e0c565b610bde81610caf565b50565b6001546001600160a01b03821660009081526008602052604081205490918291610c159190610c109042610eff565b610d6f565b6001600160a01b038416600090815260066020526040902054909150610b839082610f47565b6000606460045483610c4d9190610f47565b610abd9190610f25565b60008384600354610c689190610f47565b84600254610c769190610f47565b610c809190610f12565b610c8a9190610f25565b600354610c979190610f12565b82600254610ca59190610f47565b610ba39190610f25565b6001600160a01b038116610d145760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161040a565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b6000818310610d7e5781610b83565b5090919050565b600060208284031215610d9757600080fd5b81356001600160a01b0381168114610b8357600080fd5b600060208284031215610dc057600080fd5b813560ff81168114610b8357600080fd5b600060208284031215610de357600080fd5b5035919050565b60008060408385031215610dfd57600080fd5b50508035926020909101359150565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252601690820152751d1c9859195cc8185c99481b9bdd08195b98589b195960521b604082015260600190565b600060208284031215610e8357600080fd5b5051919050565b60208082526017908201527f73686f756c642062652061204d494e4520686f6c646572000000000000000000604082015260600190565b6020808252600e908201526d1b9bdd081a5b9a5d1a5b1a5e995960921b604082015260600190565b634e487b7160e01b600052601160045260246000fd5b81810381811115610abd57610abd610ee9565b80820180821115610abd57610abd610ee9565b600082610f4257634e487b7160e01b600052601260045260246000fd5b500490565b8082028115828204841417610abd57610abd610ee956fea2646970667358221220fe2e11f09d04d8514b213059c2ab8e9dc2ce7c91814317b9b7432e1ee79e24ba64736f6c63430008140033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 36,
        "contract": "contracts/Mining.sol:Mining",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 157,
        "contract": "contracts/Mining.sol:Mining",
        "label": "BONES_TO_HATCH_1MINERS",
        "offset": 0,
        "slot": "1",
        "type": "t_uint256"
      },
      {
        "astId": 160,
        "contract": "contracts/Mining.sol:Mining",
        "label": "PSN",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 163,
        "contract": "contracts/Mining.sol:Mining",
        "label": "PSNH",
        "offset": 0,
        "slot": "3",
        "type": "t_uint256"
      },
      {
        "astId": 166,
        "contract": "contracts/Mining.sol:Mining",
        "label": "devFeeVal",
        "offset": 0,
        "slot": "4",
        "type": "t_uint256"
      },
      {
        "astId": 169,
        "contract": "contracts/Mining.sol:Mining",
        "label": "initialized",
        "offset": 0,
        "slot": "5",
        "type": "t_bool"
      },
      {
        "astId": 175,
        "contract": "contracts/Mining.sol:Mining",
        "label": "recAdd",
        "offset": 1,
        "slot": "5",
        "type": "t_address_payable"
      },
      {
        "astId": 185,
        "contract": "contracts/Mining.sol:Mining",
        "label": "hatcheryMiners",
        "offset": 0,
        "slot": "6",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 189,
        "contract": "contracts/Mining.sol:Mining",
        "label": "claimedBones",
        "offset": 0,
        "slot": "7",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 193,
        "contract": "contracts/Mining.sol:Mining",
        "label": "lastHatch",
        "offset": 0,
        "slot": "8",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 197,
        "contract": "contracts/Mining.sol:Mining",
        "label": "referrals",
        "offset": 0,
        "slot": "9",
        "type": "t_mapping(t_address,t_address)"
      },
      {
        "astId": 199,
        "contract": "contracts/Mining.sol:Mining",
        "label": "marketBones",
        "offset": 0,
        "slot": "10",
        "type": "t_uint256"
      },
      {
        "astId": 202,
        "contract": "contracts/Mining.sol:Mining",
        "label": "tradingState",
        "offset": 0,
        "slot": "11",
        "type": "t_uint8"
      },
      {
        "astId": 205,
        "contract": "contracts/Mining.sol:Mining",
        "label": "token",
        "offset": 1,
        "slot": "11",
        "type": "t_contract(IERC20)150"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_address_payable": {
        "encoding": "inplace",
        "label": "address payable",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_contract(IERC20)150": {
        "encoding": "inplace",
        "label": "contract IERC20",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_address)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => address)",
        "numberOfBytes": "32",
        "value": "t_address"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint8": {
        "encoding": "inplace",
        "label": "uint8",
        "numberOfBytes": "1"
      }
    }
  }
}